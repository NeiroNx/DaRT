<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Admins_c" xml:space="preserve">
    <value>Admins: {0}</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Allow_mes" xml:space="preserve">
    <value>Allow new messages</value>
  </data>
  <data name="Attention" xml:space="preserve">
    <value>Attention!</value>
  </data>
  <data name="Auto_Refresh" xml:space="preserve">
    <value>Auto Refresh</value>
  </data>
  <data name="Ban" xml:space="preserve">
    <value>Ban</value>
  </data>
  <data name="Bans" xml:space="preserve">
    <value>Bans</value>
  </data>
  <data name="Bans_c" xml:space="preserve">
    <value>Bans: {0}</value>
  </data>
  <data name="Ban_duration" xml:space="preserve">
    <value>Ban duration</value>
  </data>
  <data name="Ban_type" xml:space="preserve">
    <value>Ban type</value>
  </data>
  <data name="Chat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Clear_all" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Console" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Duration_num" xml:space="preserve">
    <value>Duration must be a number!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute...</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="InitApp" xml:space="preserve">
    <value>DaRT {0} initialized!</value>
  </data>
  <data name="Kick" xml:space="preserve">
    <value>Kick</value>
  </data>
  <data name="Last_refresh_h" xml:space="preserve">
    <value>Last refresh: {0}h ago</value>
  </data>
  <data name="Last_refresh_m" xml:space="preserve">
    <value>Last refresh: {0}m ago</value>
  </data>
  <data name="Last_refresh_s" xml:space="preserve">
    <value>Last refresh: {0}s ago</value>
  </data>
  <data name="Loading_news" xml:space="preserve">
    <value>Loading news...</value>
  </data>
  <data name="Load_host" xml:space="preserve">
    <value>Load host</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Offline_ban_note" xml:space="preserve">
    <value>The player you were about to ban left the game.
Press OK to ban him offline (GUID only) instead.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Ping" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="Players" xml:space="preserve">
    <value>Players</value>
  </data>
  <data name="Players_c" xml:space="preserve">
    <value>Players: {0}</value>
  </data>
  <data name="Player_Database" xml:space="preserve">
    <value>Player Database</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Quick_Ban" xml:space="preserve">
    <value>Quick Ban</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh (F5)</value>
  </data>
  <data name="Say_Global" xml:space="preserve">
    <value>Say Global</value>
  </data>
  <data name="Say_Private" xml:space="preserve">
    <value>Say Private</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Unban" xml:space="preserve">
    <value>Unban</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Bans_timeout" xml:space="preserve">
    <value>Ban request timed out!</value>
  </data>
  <data name="Big_banlist" xml:space="preserve">
    <value>It appears you are using a pretty big ban list.
Please note that your ban list may be cut off because of technical limitations in the RCon protocol.
Using the BRS (Ban Relay Server) is recommended as you won't encounter such a problem there.

You can find more informations (including a setup guide) about BRS on the DaRT download page.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Conn" xml:space="preserve">
    <value>Connecting to {0}:{1}...</value>
  </data>
  <data name="Error_banner" xml:space="preserve">
    <value>Unable to get banner</value>
  </data>
  <data name="Error_brs" xml:space="preserve">
    <value>This server is not running BRS or the server configuration is faulty!</value>
  </data>
  <data name="Error_news" xml:space="preserve">
    <value>Could not retrieve news!</value>
  </data>
  <data name="Error_nocon" xml:space="preserve">
    <value>Please connect first!</value>
  </data>
  <data name="Error_occ" xml:space="preserve">
    <value>An error occurred, please try again.</value>
  </data>
  <data name="Error_occ_log" xml:space="preserve">
    <value>An error occured while accessing the log file.</value>
  </data>
  <data name="Error_pass" xml:space="preserve">
    <value>Please enter a valid password!</value>
  </data>
  <data name="Error_port" xml:space="preserve">
    <value>Please enter a valid port!</value>
  </data>
  <data name="Error_sel_host" xml:space="preserve">
    <value>Please select a host first.</value>
  </data>
  <data name="First_run" xml:space="preserve">
    <value>This appears to be the first start of the new version of DaRT.
DaRT has found an existing database and will now migrate all of your data to the new format.
A backup of your existing databases will be saved.

Please continue to start the migration process.
(This may take a while depending on the size of the database)</value>
  </data>
  <data name="Geoloc" xml:space="preserve">
    <value>Geolocating...</value>
  </data>
  <data name="Get_banner" xml:space="preserve">
    <value>Downloading server banner...</value>
  </data>
  <data name="Get_n_bans" xml:space="preserve">
    <value>Update bans, get {0} bans.</value>
  </data>
  <data name="Get_n_players" xml:space="preserve">
    <value>Update players, get {0} players.</value>
  </data>
  <data name="Hosts_note" xml:space="preserve">
    <value>All hosts you ever connected to are listed below</value>
  </data>
  <data name="Lock_server" xml:space="preserve">
    <value>Lock server</value>
  </data>
  <data name="Multiban" xml:space="preserve">
    <value>Manually add multiple bans</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="Players_timeout" xml:space="preserve">
    <value>Player request timed out!</value>
  </data>
  <data name="Recon" xml:space="preserve">
    <value>Reconnecting...</value>
  </data>
  <data name="Refr_bans" xml:space="preserve">
    <value>Refreshing bans...</value>
  </data>
  <data name="Refr_now" xml:space="preserve">
    <value>Refreshing...</value>
  </data>
  <data name="Refr_players" xml:space="preserve">
    <value>Refreshing players on server...</value>
  </data>
  <data name="Rel_bans" xml:space="preserve">
    <value>Reload bans</value>
  </data>
  <data name="Rel_events" xml:space="preserve">
    <value>Reload events</value>
  </data>
  <data name="Rel_script" xml:space="preserve">
    <value>Reload scripts</value>
  </data>
  <data name="Saved_hosts" xml:space="preserve">
    <value>Saved hosts</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Shutdown" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="Shutdown_note" xml:space="preserve">
    <value>Are you sure you want to shut the server down?

Note: This will terminate your current RCon session.</value>
  </data>
  <data name="Tip_autorefr" xml:space="preserve">
    <value>If checked, DaRT will automatically refresh your player list at the interval set on the settings page.</value>
  </data>
  <data name="Tip_banner" xml:space="preserve">
    <value>A banner of your server will be shown if your server is registered on GameTracker.\r\nClicking it will bring you to GameTracker.</value>
  </data>
  <data name="Tip_connect" xml:space="preserve">
    <value>Connect to the server using the details given above.</value>
  </data>
  <data name="Tip_disconnect" xml:space="preserve">
    <value>Disconnect from the server.</value>
  </data>
  <data name="Tip_host" xml:space="preserve">
    <value>Load previously used hosts.</value>
  </data>
  <data name="Tip_message" xml:space="preserve">
    <value>If unchecked, DaRT will queue all incoming messages and add them once new messages are allowed again.
This can prevent unwanted scrolling while you are copying text.</value>
  </data>
  <data name="Tip_refr" xml:space="preserve">
    <value>Refresh the current view.</value>
  </data>
  <data name="Tip_say" xml:space="preserve">
    <value>You can switch between say and console mode here.
While in say mode you can use global chat to communicate with your players.
Console mode allows you to execute RCon commands directly on the server.</value>
  </data>
  <data name="Tip_settings" xml:space="preserve">
    <value>Adjust your settings.</value>
  </data>
  <data name="Tip_tools" xml:space="preserve">
    <value>Contains a useful collection of tools.</value>
  </data>
  <data name="Unlock_server" xml:space="preserve">
    <value>Unlock server</value>
  </data>
</root>