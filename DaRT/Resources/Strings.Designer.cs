//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.35312
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DaRT.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DaRT.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Admins: {0}.
        /// </summary>
        internal static string Admins_c {
            get {
                return ResourceManager.GetString("Admins_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All.
        /// </summary>
        internal static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allow new messages.
        /// </summary>
        internal static string Allow_mes {
            get {
                return ResourceManager.GetString("Allow_mes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply.
        /// </summary>
        internal static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attention!.
        /// </summary>
        internal static string Attention {
            get {
                return ResourceManager.GetString("Attention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto Refresh.
        /// </summary>
        internal static string Auto_Refresh {
            get {
                return ResourceManager.GetString("Auto_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ban.
        /// </summary>
        internal static string Ban {
            get {
                return ResourceManager.GetString("Ban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ban duration.
        /// </summary>
        internal static string Ban_duration {
            get {
                return ResourceManager.GetString("Ban_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ban type.
        /// </summary>
        internal static string Ban_type {
            get {
                return ResourceManager.GetString("Ban_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bans.
        /// </summary>
        internal static string Bans {
            get {
                return ResourceManager.GetString("Bans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bans: {0}.
        /// </summary>
        internal static string Bans_c {
            get {
                return ResourceManager.GetString("Bans_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ban request timed out!.
        /// </summary>
        internal static string Bans_timeout {
            get {
                return ResourceManager.GetString("Bans_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на It appears you are using a pretty big ban list.
        ///Please note that your ban list may be cut off because of technical limitations in the RCon protocol.
        ///Using the BRS (Ban Relay Server) is recommended as you won&apos;t encounter such a problem there.
        ///
        ///You can find more informations (including a setup guide) about BRS on the DaRT download page..
        /// </summary>
        internal static string Big_banlist {
            get {
                return ResourceManager.GetString("Big_banlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chat.
        /// </summary>
        internal static string Chat {
            get {
                return ResourceManager.GetString("Chat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear.
        /// </summary>
        internal static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear All.
        /// </summary>
        internal static string Clear_all {
            get {
                return ResourceManager.GetString("Clear_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Comment.
        /// </summary>
        internal static string Comment {
            get {
                return ResourceManager.GetString("Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting to {0}:{1}....
        /// </summary>
        internal static string Conn {
            get {
                return ResourceManager.GetString("Conn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        internal static string Connect {
            get {
                return ResourceManager.GetString("Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Console.
        /// </summary>
        internal static string Console {
            get {
                return ResourceManager.GetString("Console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy.
        /// </summary>
        internal static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date.
        /// </summary>
        internal static string Date {
            get {
                return ResourceManager.GetString("Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete.
        /// </summary>
        internal static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Entry {0} was removed.
        /// </summary>
        internal static string Deleted {
            get {
                return ResourceManager.GetString("Deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        internal static string Disconnect {
            get {
                return ResourceManager.GetString("Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  
        ///(Click to download update).
        /// </summary>
        internal static string Down_upd {
            get {
                return ResourceManager.GetString("Down_upd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duration must be a number!.
        /// </summary>
        internal static string Duration_num {
            get {
                return ResourceManager.GetString("Duration_num", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to get banner.
        /// </summary>
        internal static string Error_banner {
            get {
                return ResourceManager.GetString("Error_banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This server is not running BRS or the server configuration is faulty!.
        /// </summary>
        internal static string Error_brs {
            get {
                return ResourceManager.GetString("Error_brs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Comments can&apos;t be assigned to IPs..
        /// </summary>
        internal static string Error_ip_com {
            get {
                return ResourceManager.GetString("Error_ip_com", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not retrieve news!.
        /// </summary>
        internal static string Error_news {
            get {
                return ResourceManager.GetString("Error_news", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please connect first!.
        /// </summary>
        internal static string Error_nocon {
            get {
                return ResourceManager.GetString("Error_nocon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occurred, please try again..
        /// </summary>
        internal static string Error_occ {
            get {
                return ResourceManager.GetString("Error_occ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while accessing the log file..
        /// </summary>
        internal static string Error_occ_log {
            get {
                return ResourceManager.GetString("Error_occ_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please enter a valid password!.
        /// </summary>
        internal static string Error_pass {
            get {
                return ResourceManager.GetString("Error_pass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please enter a valid port!.
        /// </summary>
        internal static string Error_port {
            get {
                return ResourceManager.GetString("Error_port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please select a host first..
        /// </summary>
        internal static string Error_sel_host {
            get {
                return ResourceManager.GetString("Error_sel_host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Execute....
        /// </summary>
        internal static string Execute {
            get {
                return ResourceManager.GetString("Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All expired bans were removed from the ban list..
        /// </summary>
        internal static string Expired_removed {
            get {
                return ResourceManager.GetString("Expired_removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This appears to be the first start of the new version of DaRT.
        ///DaRT has found an existing database and will now migrate all of your data to the new format.
        ///A backup of your existing databases will be saved.
        ///
        ///Please continue to start the migration process.
        ///(This may take a while depending on the size of the database).
        /// </summary>
        internal static string First_run {
            get {
                return ResourceManager.GetString("First_run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Geolocating....
        /// </summary>
        internal static string Geoloc {
            get {
                return ResourceManager.GetString("Geoloc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloading server banner....
        /// </summary>
        internal static string Get_banner {
            get {
                return ResourceManager.GetString("Get_banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update bans, get {0} bans..
        /// </summary>
        internal static string Get_n_bans {
            get {
                return ResourceManager.GetString("Get_n_bans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update players, get {0} players..
        /// </summary>
        internal static string Get_n_players {
            get {
                return ResourceManager.GetString("Get_n_players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host.
        /// </summary>
        internal static string Host {
            get {
                return ResourceManager.GetString("Host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All hosts you ever connected to are listed below.
        /// </summary>
        internal static string Hosts_note {
            get {
                return ResourceManager.GetString("Hosts_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DaRT {0} initialized!.
        /// </summary>
        internal static string InitApp {
            get {
                return ResourceManager.GetString("InitApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Kick.
        /// </summary>
        internal static string Kick {
            get {
                return ResourceManager.GetString("Kick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last refresh: {0}h ago.
        /// </summary>
        internal static string Last_refresh_h {
            get {
                return ResourceManager.GetString("Last_refresh_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last refresh: {0}m ago.
        /// </summary>
        internal static string Last_refresh_m {
            get {
                return ResourceManager.GetString("Last_refresh_m", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last refresh: {0}s ago.
        /// </summary>
        internal static string Last_refresh_s {
            get {
                return ResourceManager.GetString("Last_refresh_s", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load host.
        /// </summary>
        internal static string Load_host {
            get {
                return ResourceManager.GetString("Load_host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading news....
        /// </summary>
        internal static string Loading_news {
            get {
                return ResourceManager.GetString("Loading_news", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lock server.
        /// </summary>
        internal static string Lock_server {
            get {
                return ResourceManager.GetString("Lock_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log.
        /// </summary>
        internal static string Log {
            get {
                return ResourceManager.GetString("Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message.
        /// </summary>
        internal static string Message {
            get {
                return ResourceManager.GetString("Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manually add multiple bans.
        /// </summary>
        internal static string Multiban {
            get {
                return ResourceManager.GetString("Multiban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        internal static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Notice.
        /// </summary>
        internal static string Notice {
            get {
                return ResourceManager.GetString("Notice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The player you were about to ban left the game.
        ///Press OK to ban him offline (GUID only) instead..
        /// </summary>
        internal static string Offline_ban_note {
            get {
                return ResourceManager.GetString("Offline_ban_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        internal static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ping.
        /// </summary>
        internal static string Ping {
            get {
                return ResourceManager.GetString("Ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player Database.
        /// </summary>
        internal static string Player_Database {
            get {
                return ResourceManager.GetString("Player_Database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Players.
        /// </summary>
        internal static string Players {
            get {
                return ResourceManager.GetString("Players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Players: {0}.
        /// </summary>
        internal static string Players_c {
            get {
                return ResourceManager.GetString("Players_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player request timed out!.
        /// </summary>
        internal static string Players_timeout {
            get {
                return ResourceManager.GetString("Players_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port.
        /// </summary>
        internal static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Ban.
        /// </summary>
        internal static string Quick_Ban {
            get {
                return ResourceManager.GetString("Quick_Ban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Banned for {0} minute(s)..
        /// </summary>
        internal static string Quick_reason {
            get {
                return ResourceManager.GetString("Quick_reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reason.
        /// </summary>
        internal static string Reason {
            get {
                return ResourceManager.GetString("Reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reconnecting....
        /// </summary>
        internal static string Recon {
            get {
                return ResourceManager.GetString("Recon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing bans....
        /// </summary>
        internal static string Refr_bans {
            get {
                return ResourceManager.GetString("Refr_bans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing....
        /// </summary>
        internal static string Refr_now {
            get {
                return ResourceManager.GetString("Refr_now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing players on server....
        /// </summary>
        internal static string Refr_players {
            get {
                return ResourceManager.GetString("Refr_players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh (F5).
        /// </summary>
        internal static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reload bans.
        /// </summary>
        internal static string Rel_bans {
            get {
                return ResourceManager.GetString("Rel_bans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reload events.
        /// </summary>
        internal static string Rel_events {
            get {
                return ResourceManager.GetString("Rel_events", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reload scripts.
        /// </summary>
        internal static string Rel_script {
            get {
                return ResourceManager.GetString("Rel_script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Saved hosts.
        /// </summary>
        internal static string Saved_hosts {
            get {
                return ResourceManager.GetString("Saved_hosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Say Global.
        /// </summary>
        internal static string Say_Global {
            get {
                return ResourceManager.GetString("Say_Global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Say Private.
        /// </summary>
        internal static string Say_Private {
            get {
                return ResourceManager.GetString("Say_Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search.
        /// </summary>
        internal static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send.
        /// </summary>
        internal static string Send {
            get {
                return ResourceManager.GetString("Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shutdown.
        /// </summary>
        internal static string Shutdown {
            get {
                return ResourceManager.GetString("Shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to shut the server down?
        ///
        ///Note: This will terminate your current RCon session..
        /// </summary>
        internal static string Shutdown_note {
            get {
                return ResourceManager.GetString("Shutdown_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If checked, DaRT will automatically refresh your player list at the interval set on the settings page..
        /// </summary>
        internal static string Tip_autorefr {
            get {
                return ResourceManager.GetString("Tip_autorefr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A banner of your server will be shown if your server is registered on GameTracker.\r\nClicking it will bring you to GameTracker..
        /// </summary>
        internal static string Tip_banner {
            get {
                return ResourceManager.GetString("Tip_banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect to the server using the details given above..
        /// </summary>
        internal static string Tip_connect {
            get {
                return ResourceManager.GetString("Tip_connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect from the server..
        /// </summary>
        internal static string Tip_disconnect {
            get {
                return ResourceManager.GetString("Tip_disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load previously used hosts..
        /// </summary>
        internal static string Tip_host {
            get {
                return ResourceManager.GetString("Tip_host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If unchecked, DaRT will queue all incoming messages and add them once new messages are allowed again.
        ///This can prevent unwanted scrolling while you are copying text..
        /// </summary>
        internal static string Tip_message {
            get {
                return ResourceManager.GetString("Tip_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh the current view..
        /// </summary>
        internal static string Tip_refr {
            get {
                return ResourceManager.GetString("Tip_refr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can switch between say and console mode here.
        ///While in say mode you can use global chat to communicate with your players.
        ///Console mode allows you to execute RCon commands directly on the server..
        /// </summary>
        internal static string Tip_say {
            get {
                return ResourceManager.GetString("Tip_say", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adjust your settings..
        /// </summary>
        internal static string Tip_settings {
            get {
                return ResourceManager.GetString("Tip_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contains a useful collection of tools..
        /// </summary>
        internal static string Tip_tools {
            get {
                return ResourceManager.GetString("Tip_tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unban.
        /// </summary>
        internal static string Unban {
            get {
                return ResourceManager.GetString("Unban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unlock server.
        /// </summary>
        internal static string Unlock_server {
            get {
                return ResourceManager.GetString("Unlock_server", resourceCulture);
            }
        }
    }
}
